name: Deploy to Server # The name of this workflow, shown in the Actions tab.

on:
  push:
    branches:
      - main # Trigger the workflow only when changes are pushed to the main branch.

jobs: # Define one or more jobs (here, we have one: 'deploy').
  deploy:
    runs-on: ubuntu-latest # GitHub will use an Ubuntu VM to execute this job.

    steps: # Steps define the tasks for this job.
      - name: Checkout Code
        uses: actions/checkout@v3
        # This action checks out your repository code into the VM.

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.4"
        # This sets up a Go environment on the VM, using the specified version.

      - name: Set environment variables
        env:
          PORT: ${{ secrets.PORT }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          CONN: ${{ secrets.CONN }}
        run: |
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "CONN=${{ secrets.CONN }}" >> .env

      - name: Install dependencies
        run: go mod tidy

      - name: Build the Project
        run: |
          go build -o webserver .

      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "Stopping webserver..."
            sudo systemctl stop webserver
            echo "Clearing old files..."
            rm -rf /var/www/webserver/*
            echo "Copying new files..."
            scp -i ~/.ssh/id_rsa ./webserver root@${{ secrets.SERVER_IP }}:/var/www/webserver/
            echo "Starting webserver..."
            sudo systemctl start webserver
          fingerprint: "sha256"
          use_insecure_cipher: true
          debug: true
