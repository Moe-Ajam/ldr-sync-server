name: Deploy to Server # The name of this workflow, shown in the Actions tab.

on:
  push:
    branches:
      - main # Trigger the workflow only when changes are pushed to the main branch.

jobs: # Define one or more jobs (here, we have one: 'deploy').
  deploy:
    runs-on: ubuntu-latest # GitHub will use an Ubuntu VM to execute this job.

    steps: # Steps define the tasks for this job.
      - name: Checkout Code
        uses: actions/checkout@v3
        # This action checks out your repository code into the VM.

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.4"
        # This sets up a Go environment on the VM, using the specified version.

      # - name: Set environment variables
      #   env:
      #     PORT: ${{ secrets.PORT }}
      #     JWT_SECRET: ${{ secrets.JWT_SECRET }}
      #     CONN: ${{ secrets.CONN }}
      #   run: |
      #     echo "PORT=${{ secrets.PORT }}" >> .env
      #     echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
      #     echo "CONN=${{ secrets.CONN }}" >> .env

      - name: Install dependencies
        run: go mod tidy

      - name: Build the Project
        run: |
          make build

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary

      - name: Adding know hosts
        run: ssh-keyscan -p 22 -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Copy binary
        run: rsync -e "ssh -p 22" ./webserver root@${{ secrets.SERVER_IP }}:/var/www/webserver

      - name: Copy migrations
        run: rsync -e "ssh -p 22" -rP ./sql/schema root@${{ secrets.SERVER_IP }}:/var/www/webserver

      - name: Create .env and restart the server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo $PWD

            echo "PORT=${{ secrets.PORT }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "CONN=${{ secrets.CONN }}" >> .env

            goose -dir /var/www/webserver/schema sqlite3 ./users.db up

            # sudo mv ~/api.service /etc/systemd/system
            # sudo systemctl enable api 
            # sudo systemctl restart api
